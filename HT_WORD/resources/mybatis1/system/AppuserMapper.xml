<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AppuserMapper">
	
	<!--表名 -->
	<sql id="tableName">
		SYS_APP_USER
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_ID,
		CREATE_USERID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		PROVINCE,
		CITY,
		WEIXIN,
		ADRESS,
		SCHOOL, 
        CLASS, 
        SEX,
		PHONE,
		PHOTOPATH,
		SFID,
		START_TIME,
		END_TIME,
		LOGIN_COUNT,
		YEARS,
		EMAIL,
		NUMBER,
		SYSPREVIEWCOUNT,
		SYSPREVIEWON
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},
		#{CREATE_USERID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{PROVINCE},
		#{CITY},
		#{WEIXIN},
		#{ADRESS}, 
		#{SCHOOL},
		 #{CLASS}, 
		 #{SEX},
		#{PHONE},
		#{PHOTOPATH},
		#{SFID},
		#{START_TIME},
		#{END_TIME},
		#{LOGIN_COUNT},
		#{YEARS},
		#{EMAIL},
		#{NUMBER},
		#{SYSPREVIEWCOUNT},
		#{SYSPREVIEWON}	
	</sql>
	
	<!-- 角色表 -->
	<sql id="roleTableName">
		SYS_ROLE
	</sql>
	
	<!-- 列出某角色下的所有会员 -->
	<select id="listAllAppuserByRorlid"  parameterType="pd" resultType="pd" >
		select 
			USER_ID
		from 
		<include refid="tableName"></include>
		where 
			ROLE_ID = #{ROLE_ID}
	</select>
	
	<select id="addmultiuser" parameterType="pd" statementType="CALLABLE">
        CALL add_user_optimizition( #{CREATECOUNT},#{CREATE_USERID})
    </select>
    
    <!-- 返回未选课程-->
	<select id="nochoosecourse"  parameterType="pd" resultType="pd" >
		SELECT TEXTBOOK_ID,TEXTBOOK_NAME from tm_textbook_version
WHERE  TEXTBOOK_ID not IN
(
SELECT TEXTBOOK_ID from t_stu_course 
where USER_ID=#{STUUSER_ID}
)

<if test="keyword!= null and keyword != ''"><!-- 关键词检索 -->
         	and
         TEXTBOOK_NAME LIKE CONCAT(CONCAT('%', #{keyword}),'%')
         </if>
	</select>
	
	
	 <!-- 返回学生已选择课程-->
	<select id="selectedcourse"  parameterType="pd" resultType="pd" >
	select t1.*,t2.TEXTBOOK_NAME,t2.SECTION,t3.USERNAME
from 
(select * from t_stu_course
WHERE USER_ID=#{STUUSER_ID}) as t1 LEFT JOIN (SELECT * from tm_textbook_version) t2
on t1.TEXTBOOK_ID=t2.TEXTBOOK_ID ,sys_app_user t3
where t1.USER_ID=t3.USER_ID
	</select>
    
    
     <!-- 返回学生已选择课程数量-->
	<select id="stuselectedcoursecount"  parameterType="pd" resultType="pd" >
	  select USER_ID, count(TEXTBOOK_ID) as textbookcount
     from t_stu_course
     where USER_ID=#{USER_ID}
   
	</select>
    
  
    
    
   <!--获取校长的学生开通人数 -->
	<select id="findopenbookcount" parameterType="pd" resultType="pd" >
		select HEADMASTER_ID, count(distinct USER_ID) as counttextbook from t_stu_course
        where HEADMASTER_ID=#{USER_IDHead}
	</select> 
	
	<!-- 会员列表 -->
	<select id="userlistPage" parameterType="page" resultType="pd">
		select  IFNULL(Q.textbookcount,0) as textbookcount,
		        u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.CREATE_USERID,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.END_TIME,
				u.LOGIN_COUNT,
				u.YEARS,
				u.STATUS,
				u.EMAIL,
				u.PHONE,
				u.NUMBER,
				u.SYSPREVIEWCOUNT,
		        u.SYSPREVIEWON,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u LEFT JOIN(select USER_ID, count(TEXTBOOK_ID) as textbookcount
     from t_stu_course
    GROUP BY USER_ID) Q  on u.USER_ID=Q.USER_ID, <include refid="roleTableName"></include> r 
		where u.ROLE_ID = r.ROLE_ID 
		and r.PARENT_ID = '2'
		<if test="pd.keywords != null and pd.keywords!= ''"><!-- 关键词检索 -->
			and (
				u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.USER_IDHead!= null and pd.USER_IDHead!= ''"><!-- 关键词检索 -->
			and (
				CREATE_USERID=#{pd.USER_IDHead}
				)
		</if>
		
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 到期时间检索 -->
			and u.END_TIME &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 到期时间检索 -->
			and u.END_TIME &lt;= #{pd.lastLoginEnd} 
		</if>
		<if test="pd.STATUS != null and pd.STATUS != ''"><!-- 状态检索 -->
			and u.STATUS=#{pd.STATUS} 
		</if>
		  
		order by u.USER_ID, textbookcount DESC, u.NAME
		
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USERNAME = #{USERNAME}
			
		or USER_ID = #{USERNAME}
		or USER_ID = #{USER_ID}
		
	</select>
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultType="pd">
		select <include refid="Field"></include> from
		<include refid="tableName"></include>
		where 1=1
		<if test="USERNAME!=null and PASSWORD!=null">
		and USERNAME = #{USERNAME} and PASSWORD=#{PASSWORD}
		</if>
		<if test="USER_ID!=null and USER_ID>0">
		and USER_ID = #{USER_ID}
		</if>
	</select>
	
	
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByEmail" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByNumber" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 新增会员 -->
	<insert id="saveU" parameterType="pd">
		insert into <include refid="tableName"></include> (
			<include refid="Field"></include>
		) values (
			<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd">
		delete from <include refid="tableName"></include> 
		where 
			USER_ID = #{USER_ID}
	</delete>
	
	
	<!-- 修改用户名等信息 -->
	<update id="editlogincount" parameterType="pd">
		update  <include refid="tableName"></include>
		set login_count=IFNULL(login_count,0)+1
          where 
			USER_ID = #{USER_ID}
	</update>
	
	<!-- 修改用户名等信息 -->
	<update id="editsyson" parameterType="pd">
		update  <include refid="tableName"></include>
		set 
        SYSPREVIEWCOUNT= #{SYSPREVIEWCOUNT},
		SYSPREVIEWON=#{SYSPREVIEWON}	
        where 
		USER_ID = #{USER_ID}
	</update>

	
	
	<!-- 修改用户名等信息 -->
	<update id="editUserinf" parameterType="pd">
		update  <include refid="tableName"></include>
		set USERNAME= #{USERNAME},
		     PROVINCE=#{PROVINCE},
		    CITY=#{CITY},
		
            SCHOOL = #{SCHOOL},
            CLASS = #{CLASS},
            WEIXIN=#{WEIXIN},
		   PHONE=#{PHONE},
		   PHOTOPATH=#{PHOTOPATH},
            SEX = #{SEX}
       <if test="PASSWORD != null and PASSWORD != ''">
			,PASSWORD				= #{PASSWORD}
		</if>
		where 
			USER_ID = #{USER_ID}
	</update>
	
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd">
		update  <include refid="tableName"></include>
		set USERNAME				= #{USERNAME},
			NAME					= #{NAME},
			ROLE_ID 				= #{ROLE_ID},
			BZ						= #{BZ},
			PHONE 					= #{PHONE},
			SFID 					= #{SFID},
			START_TIME	 			= #{START_TIME},
			END_TIME 				= #{END_TIME},
			YEARS					= #{YEARS},
			STATUS 					= #{STATUS},
			EMAIL					= #{EMAIL},
			NUMBER 					= #{NUMBER}
		<if test="PASSWORD != null and PASSWORD != ''">
			,PASSWORD				= #{PASSWORD}
		</if>
		where 
			USER_ID = #{USER_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findByUiId" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
	</select>
	
	<!-- 全部会员 -->
	<select id="listAllUser" parameterType="pd" resultType="pd">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.END_TIME,
				u.LOGIN_COUNT,
				u.YEARS,
				u.STATUS,
				u.EMAIL,
				u.PHONE,
				u.SFID,
				u.NUMBER,
				u.SYSPREVIEWCOUNT,
		        u.SYSPREVIEWON,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u, <include refid="roleTableName"></include> r 
		where u.ROLE_ID = r.ROLE_ID 
		and r.PARENT_ID = '2'
		<if test="keywords != null and keywords!= ''"><!-- 关键词检索 -->
			and (
				u.USERNAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				or
				u.EMAIL LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				or
				u.NUMBER LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 到期时间检索 -->
			and u.END_TIME &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 到期时间检索 -->
			and u.END_TIME &lt;= #{lastLoginEnd} 
		</if>
		<if test="STATUS != null and STATUS != ''"><!-- 状态检索 -->
			and u.STATUS=#{STATUS} 
		</if>
		order by u.NAME
	</select>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String">
		delete from <include refid="tableName"></include>
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<!-- 获取总数 -->
	<select id="getAppUserCount" parameterType="String" resultType="pd">
		select 
			count(USER_ID) appUserCount
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- FH HFTC( HFTC) -->
</mapper>